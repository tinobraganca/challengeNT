server:
  port: 8082

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
  otlp:
    metrics:
      export:
        url: http://otel-collector:4318/v1/metrics
        step: 10s
    tracing:
      endpoint: http://otel-collector:4318/v1/traces
  tracing:
    sampling:
      probability: 1.0
  metrics:
    distribution:
      percentiles:
        do.sleep.method.timed: 0.99, 0.95, 0.9, 0.7, 0.5
        http.server.requests: 0.99, 0.95, 0.9, 0.7, 0.5
      percentiles-histogram:
        do.sleep.method.timed: true
        http.server.requests: true
      minimum-expected-value:
        do.sleep.method.timed: 100ms
        http.server.requests: 100ms
      maximum-expected-value:
        do.sleep.method.timed: 10s
        http.server.requests: 10s
      slo:
        do.sleep.method.timed: 300ms,500ms,1s,2s
        http.server.requests: 300ms,500ms,1s,2s


spring:
  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY_ID:""}
        secret-key: ${AWS_SECRET_ACCESS_KEY:""}
      region:
        static: us-east-1
  application:
    name: user-service
    sqs:
      payment:
        warning:
          hotel: https://sqs.us-east-1.amazonaws.com/218204786478/sqs-msg-payment-hotel
          user: https://sqs.us-east-1.amazonaws.com/218204786478/sqs-msg-payment-user
      booking:
        warning:
          hotel: https://sqs.us-east-1.amazonaws.com/218204786478/sqs-msg-booking-hotel
          user: https://sqs.us-east-1.amazonaws.com/218204786478/sqs-msg-booking-user
  datasource:
    driver-class-name: org.postgresql.Driver
    password: ${DATABASE_PASSWORD}
    url: ${DATABASE_URL}
    username: ${DATABASE_USER}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        globally_quoted_identifiers: true
