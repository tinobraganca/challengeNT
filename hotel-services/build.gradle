plugins {
	id 'java'
	id 'java-library'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.ntconsulting.hotel'
version = '0.0.7-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

ext {
	set('springBootAdminVersion', "3.2.3")
	set('springCloudVersion', "2023.0.1")
}

dependencies {
	runtimeOnly 'io.micrometer:micrometer-registry-otlp'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	implementation 'io.micrometer:micrometer-tracing-bridge-otel'
	implementation 'io.opentelemetry:opentelemetry-api:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-context:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-sdk:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-sdk-trace:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-sdk-metrics:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-sdk-common:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-extension-trace-propagators:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-exporter-common:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-exporter-otlp:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-exporter-otlp-common:1.29.0'
	implementation 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-api-semconv:1.29.0-alpha'

	implementation 'io.opentelemetry.instrumentation:opentelemetry-logback-appender-1.0:1.29.0-alpha'

	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'de.codecentric:spring-boot-admin-starter-server'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.flywaydb:flyway-core'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

